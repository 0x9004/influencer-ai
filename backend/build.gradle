plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.sonarqube' version "5.0.0.4638"
    id 'jacoco'
}

group = 'dev.elfa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

sonar {
    properties {
        property "sonar.projectKey", "backend-influencer-ai"
        property "sonar.organization", "renefatuaki"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacoco {
    toolVersion = "0.8.12"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    springAiVersion = "1.0.0-M1"
}

dependencies {
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'commons-codec:commons-codec:1.17.1'
    implementation 'com.github.scribejava:scribejava-apis:6.4.1'
    implementation 'org.twitter4j:twitter4j-core:4.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:$springAiVersion"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
